
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.util.Calendar;
import java.sql.Timestamp;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author acv
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    private String currentSemester; 
    private StudentEntry currentStudent;
    
    public MainFrame() {
        initComponents();
        rebuildSemesterComboBoxes();
        rebuildStudentComboBoxes();
        rebuildCourseComboBoxes();
    }
    
    public void rebuildSemesterComboBoxes()
    {
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        changeSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel(semesters.toArray()));
        if (semesters.size() > 0)
        {
            currentSemesterLabel.setText(semesters.get(0));
            currentSemester = semesters.get(0);
        }
        else
        {
            currentSemesterLabel.setText("None, add a semester.");
            currentSemester = "None";
        }
    }
    
    public void rebuildCourseComboBoxes()
    {
        ArrayList<String> courses = CourseQueries.getAllCourseCodes(currentSemester);
        scheduleCourseCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        studentDropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        adminDropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        displayCourseListOfStudentsComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));        
    }
    
    public void rebuildStudentComboBoxes()
    {
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        ArrayList<String> studentNames = new ArrayList<>();
        
        for(StudentEntry student: students)
        {
            String name = student.getLastName() + ", " + student.getFirstName();
            studentNames.add(name);
        }
        scheduleCourseStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(studentNames.toArray()));
        displayScheduleStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(studentNames.toArray()));
        dropStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(studentNames.toArray()));
        changeStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(studentNames.toArray()));
    }
    
    public void rebuildDropCourseComboBoxes(){
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        ArrayList<ScheduleEntry> schedules = ScheduleQueries.getScheduleByStudent(currentSemester, students.get(changeStudentComboBox.getSelectedIndex()).getStudentID());
        ArrayList<String> courses = new ArrayList<>();
        for (ScheduleEntry schedule : schedules){
            courses.add(schedule.getCourseCode());
        }
        studentDropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
    }
    
    private String getStudentID(String studentName){
        String studentID = "";
        ArrayList<StudentEntry> allStudents = StudentQueries.getAllStudents();
        for(int i = 0; i < allStudents.size(); i++){
            StudentEntry currStudent = allStudents.get(i);
            if(studentName.equals(getStudentName(currStudent.getStudentID()))){
                studentID = currStudent.getStudentID();
            }
        }
        return studentID;
    }
    
    private String getStudentName(String studentID){
        StudentEntry student = StudentQueries.getStudent(studentID);
        String studentName = student.getLastName()+", "+student.getFirstName();
        return studentName;
    }    
            

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CourseSchedulerLabel = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        adminTabbedPanel = new javax.swing.JPanel();
        adminTabbedPane = new javax.swing.JTabbedPane();
        addSemesterPanel = new javax.swing.JPanel();
        finalAddSemesterName = new javax.swing.JLabel();
        addSemesterTextfield = new javax.swing.JTextField();
        addSemesterSubmitButton = new javax.swing.JButton();
        addSemesterStatusLabel = new javax.swing.JLabel();
        addCoursePanel = new javax.swing.JPanel();
        finalCourseCode = new javax.swing.JLabel();
        finalCourseDescription = new javax.swing.JLabel();
        finalSeats = new javax.swing.JLabel();
        addCourseCourseCodeTextField = new javax.swing.JTextField();
        addCourseCourseDescriptionTextField = new javax.swing.JTextField();
        seatsSpinner = new javax.swing.JSpinner();
        addCourseSubmitButton = new javax.swing.JButton();
        addCourseStatusLabel = new javax.swing.JLabel();
        addStudentPanel = new javax.swing.JPanel();
        finalAddStudentID = new javax.swing.JLabel();
        addStudentStudentIDTextField = new javax.swing.JTextField();
        finalAddStudentFirst = new javax.swing.JLabel();
        finalAddStudentLast = new javax.swing.JLabel();
        addStudentFirstNameTextField = new javax.swing.JTextField();
        addStudentLastNameTextField = new javax.swing.JTextField();
        addStudentSubmitButton = new javax.swing.JButton();
        addStudentStatusLabel = new javax.swing.JLabel();
        displayCourseListOfStudentsPanel = new javax.swing.JPanel();
        displayCourseListStudentsSelectCourseFinal = new javax.swing.JLabel();
        displayCourseListOfStudentsComboBox = new javax.swing.JComboBox<>();
        diplayCourseListStudentsDisplayButton = new javax.swing.JButton();
        scheduledStudentsFinal = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        displayCourseListStudentsScheduledStudents = new javax.swing.JTable();
        waitlistedStudentsFinal = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        displayCourseListStudentsWaitlistedStudents = new javax.swing.JTable();
        dropStudentPanel = new javax.swing.JPanel();
        dropStudentSelectStudentFinal = new javax.swing.JLabel();
        dropStudentComboBox = new javax.swing.JComboBox<>();
        dropStudentDisplayButton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        dropStudentTextArea = new javax.swing.JTextArea();
        adminDropCoursePanel = new javax.swing.JPanel();
        selectCourseToBeDroppedFinal = new javax.swing.JLabel();
        adminDropCourseComboBox = new javax.swing.JComboBox<>();
        adminDropCourseButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        adminDropCourseTextArea = new javax.swing.JTextArea();
        studentTabbedPanel = new javax.swing.JPanel();
        studentTabbedPane = new javax.swing.JTabbedPane();
        displayCoursesPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayCoursesTable = new javax.swing.JTable();
        displayCoursesDisplayButton = new javax.swing.JButton();
        scheduleCoursesPanel = new javax.swing.JPanel();
        finalSelectCourseCourse = new javax.swing.JLabel();
        finalSelectStudentCourse = new javax.swing.JLabel();
        scheduleCourseCourseComboBox = new javax.swing.JComboBox<>();
        scheduleCourseStudentComboBox = new javax.swing.JComboBox<>();
        scheduleCoursesSubmitButton = new javax.swing.JButton();
        scheduleCourseStatusLabel = new javax.swing.JLabel();
        displaySchedulePanel = new javax.swing.JPanel();
        finalSelectStudentSchedule = new javax.swing.JLabel();
        displayScheduleStudentComboBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayScheduleTable = new javax.swing.JTable();
        displayScheduleDisplayButton = new javax.swing.JButton();
        dropCoursePanel = new javax.swing.JPanel();
        dropCourseSelectCourseFinal = new javax.swing.JLabel();
        studentDropCourseComboBox = new javax.swing.JComboBox<>();
        studentDropCourseButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        studentDropCourseTextArea = new javax.swing.JTextArea();
        finalCurrentStudent = new javax.swing.JLabel();
        currentStudentLabel = new javax.swing.JLabel();
        changeStudentComboBox = new javax.swing.JComboBox<>();
        changeStudentButton = new javax.swing.JButton();
        finalCurrentSemester = new javax.swing.JLabel();
        currentSemesterLabel = new javax.swing.JLabel();
        changeSemesterComboBox = new javax.swing.JComboBox<>();
        changeSemesterButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CourseSchedulerLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 30)); // NOI18N
        CourseSchedulerLabel.setForeground(new java.awt.Color(0, 153, 153));
        CourseSchedulerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CourseSchedulerLabel.setText("Course Scheduler");

        finalAddSemesterName.setText("Semester Name:");

        addSemesterTextfield.setColumns(20);

        addSemesterSubmitButton.setText("Submit");
        addSemesterSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSemesterSubmitButtonActionPerformed(evt);
            }
        });

        addSemesterStatusLabel.setText("                                                   ");

        javax.swing.GroupLayout addSemesterPanelLayout = new javax.swing.GroupLayout(addSemesterPanel);
        addSemesterPanel.setLayout(addSemesterPanelLayout);
        addSemesterPanelLayout.setHorizontalGroup(
            addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSemesterPanelLayout.createSequentialGroup()
                .addGroup(addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addSemesterPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(finalAddSemesterName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addSemesterPanelLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(addSemesterSubmitButton))
                    .addGroup(addSemesterPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(368, Short.MAX_VALUE))
        );
        addSemesterPanelLayout.setVerticalGroup(
            addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSemesterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finalAddSemesterName)
                    .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addSemesterSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addSemesterStatusLabel)
                .addContainerGap(229, Short.MAX_VALUE))
        );

        adminTabbedPane.addTab("Add Semester", addSemesterPanel);

        finalCourseCode.setText("Course Code:");

        finalCourseDescription.setText("Course Description:");

        finalSeats.setText("Seats:");

        addCourseSubmitButton.setText("Submit");
        addCourseSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addCoursePanelLayout = new javax.swing.GroupLayout(addCoursePanel);
        addCoursePanel.setLayout(addCoursePanelLayout);
        addCoursePanelLayout.setHorizontalGroup(
            addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCoursePanelLayout.createSequentialGroup()
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addCoursePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addCoursePanelLayout.createSequentialGroup()
                                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(finalCourseCode)
                                    .addComponent(finalCourseDescription))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(addCoursePanelLayout.createSequentialGroup()
                                        .addComponent(addCourseCourseCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(71, 71, 71)
                                        .addComponent(finalSeats)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(seatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(addCourseCourseDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(addCourseStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addCoursePanelLayout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(addCourseSubmitButton)))
                .addGap(0, 205, Short.MAX_VALUE))
        );
        addCoursePanelLayout.setVerticalGroup(
            addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finalCourseCode)
                    .addComponent(addCourseCourseCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(finalSeats)
                    .addComponent(seatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addCourseCourseDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(finalCourseDescription))
                .addGap(20, 20, 20)
                .addComponent(addCourseStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addCourseSubmitButton)
                .addContainerGap(84, Short.MAX_VALUE))
        );

        adminTabbedPane.addTab("Add Course", addCoursePanel);

        finalAddStudentID.setText("Student ID:");

        finalAddStudentFirst.setText("First Name:");

        finalAddStudentLast.setText("Last Name:");

        addStudentSubmitButton.setText("Submit");
        addStudentSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addStudentPanelLayout = new javax.swing.GroupLayout(addStudentPanel);
        addStudentPanel.setLayout(addStudentPanelLayout);
        addStudentPanelLayout.setHorizontalGroup(
            addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addStudentStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(addStudentPanelLayout.createSequentialGroup()
                            .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(finalAddStudentID)
                                .addComponent(finalAddStudentFirst))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(addStudentFirstNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                                .addComponent(addStudentStudentIDTextField)))
                        .addGroup(addStudentPanelLayout.createSequentialGroup()
                            .addComponent(finalAddStudentLast)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(addStudentLastNameTextField)
                                .addGroup(addStudentPanelLayout.createSequentialGroup()
                                    .addComponent(addStudentSubmitButton)
                                    .addGap(0, 180, Short.MAX_VALUE))))))
                .addContainerGap(282, Short.MAX_VALUE))
        );
        addStudentPanelLayout.setVerticalGroup(
            addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finalAddStudentID)
                    .addComponent(addStudentStudentIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finalAddStudentFirst)
                    .addComponent(addStudentFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finalAddStudentLast)
                    .addComponent(addStudentLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(addStudentSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addStudentStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(155, Short.MAX_VALUE))
        );

        adminTabbedPane.addTab("Add Student", addStudentPanel);

        displayCourseListStudentsSelectCourseFinal.setText("Select Course:");

        diplayCourseListStudentsDisplayButton.setText("Display");
        diplayCourseListStudentsDisplayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diplayCourseListStudentsDisplayButtonActionPerformed(evt);
            }
        });

        scheduledStudentsFinal.setText("Scheduled Students");

        displayCourseListStudentsScheduledStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Last Name", "First Name", "Student ID"
            }
        ));
        jScrollPane3.setViewportView(displayCourseListStudentsScheduledStudents);

        waitlistedStudentsFinal.setText("Waitlisted Students");

        displayCourseListStudentsWaitlistedStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Last Name", "First Name", "Student ID"
            }
        ));
        jScrollPane5.setViewportView(displayCourseListStudentsWaitlistedStudents);

        javax.swing.GroupLayout displayCourseListOfStudentsPanelLayout = new javax.swing.GroupLayout(displayCourseListOfStudentsPanel);
        displayCourseListOfStudentsPanel.setLayout(displayCourseListOfStudentsPanelLayout);
        displayCourseListOfStudentsPanelLayout.setHorizontalGroup(
            displayCourseListOfStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayCourseListOfStudentsPanelLayout.createSequentialGroup()
                .addGroup(displayCourseListOfStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, displayCourseListOfStudentsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(displayCourseListOfStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scheduledStudentsFinal)
                            .addGroup(displayCourseListOfStudentsPanelLayout.createSequentialGroup()
                                .addComponent(displayCourseListStudentsSelectCourseFinal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(displayCourseListOfStudentsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(76, 76, 76)
                                .addComponent(diplayCourseListStudentsDisplayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(displayCourseListOfStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displayCourseListOfStudentsPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(waitlistedStudentsFinal)
                        .addContainerGap(276, Short.MAX_VALUE))
                    .addGroup(displayCourseListOfStudentsPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
        );
        displayCourseListOfStudentsPanelLayout.setVerticalGroup(
            displayCourseListOfStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, displayCourseListOfStudentsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayCourseListOfStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayCourseListStudentsSelectCourseFinal)
                    .addComponent(displayCourseListOfStudentsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(diplayCourseListStudentsDisplayButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(displayCourseListOfStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(waitlistedStudentsFinal)
                    .addComponent(scheduledStudentsFinal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(displayCourseListOfStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        adminTabbedPane.addTab("Display Course List of Students", displayCourseListOfStudentsPanel);

        dropStudentSelectStudentFinal.setText("Select Student:");

        dropStudentDisplayButton.setText("Drop Student");
        dropStudentDisplayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropStudentDisplayButtonActionPerformed(evt);
            }
        });

        dropStudentTextArea.setColumns(20);
        dropStudentTextArea.setRows(5);
        jScrollPane6.setViewportView(dropStudentTextArea);

        javax.swing.GroupLayout dropStudentPanelLayout = new javax.swing.GroupLayout(dropStudentPanel);
        dropStudentPanel.setLayout(dropStudentPanelLayout);
        dropStudentPanelLayout.setHorizontalGroup(
            dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 706, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dropStudentPanelLayout.createSequentialGroup()
                        .addComponent(dropStudentSelectStudentFinal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dropStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(dropStudentDisplayButton)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        dropStudentPanelLayout.setVerticalGroup(
            dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dropStudentSelectStudentFinal)
                    .addComponent(dropStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropStudentDisplayButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                .addContainerGap())
        );

        adminTabbedPane.addTab("Drop Student", dropStudentPanel);

        selectCourseToBeDroppedFinal.setText("Select Course to be Dropped:");

        adminDropCourseButton.setText("Drop Course");
        adminDropCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminDropCourseButtonActionPerformed(evt);
            }
        });

        adminDropCourseTextArea.setColumns(20);
        adminDropCourseTextArea.setRows(5);
        jScrollPane7.setViewportView(adminDropCourseTextArea);

        javax.swing.GroupLayout adminDropCoursePanelLayout = new javax.swing.GroupLayout(adminDropCoursePanel);
        adminDropCoursePanel.setLayout(adminDropCoursePanelLayout);
        adminDropCoursePanelLayout.setHorizontalGroup(
            adminDropCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminDropCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminDropCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7)
                    .addGroup(adminDropCoursePanelLayout.createSequentialGroup()
                        .addComponent(selectCourseToBeDroppedFinal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(adminDropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(adminDropCourseButton)
                        .addGap(0, 306, Short.MAX_VALUE)))
                .addContainerGap())
        );
        adminDropCoursePanelLayout.setVerticalGroup(
            adminDropCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminDropCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminDropCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectCourseToBeDroppedFinal)
                    .addComponent(adminDropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adminDropCourseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                .addContainerGap())
        );

        adminTabbedPane.addTab("Drop Course", adminDropCoursePanel);

        javax.swing.GroupLayout adminTabbedPanelLayout = new javax.swing.GroupLayout(adminTabbedPanel);
        adminTabbedPanel.setLayout(adminTabbedPanelLayout);
        adminTabbedPanelLayout.setHorizontalGroup(
            adminTabbedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(adminTabbedPane)
        );
        adminTabbedPanelLayout.setVerticalGroup(
            adminTabbedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(adminTabbedPane)
        );

        jTabbedPane1.addTab("Admin", adminTabbedPanel);

        displayCoursesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Code", "Description", "Seats"
            }
        ));
        jScrollPane1.setViewportView(displayCoursesTable);

        displayCoursesDisplayButton.setText("Display");
        displayCoursesDisplayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayCoursesDisplayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout displayCoursesPanelLayout = new javax.swing.GroupLayout(displayCoursesPanel);
        displayCoursesPanel.setLayout(displayCoursesPanelLayout);
        displayCoursesPanelLayout.setHorizontalGroup(
            displayCoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayCoursesPanelLayout.createSequentialGroup()
                .addGroup(displayCoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(displayCoursesPanelLayout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(displayCoursesDisplayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(241, Short.MAX_VALUE))
        );
        displayCoursesPanelLayout.setVerticalGroup(
            displayCoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayCoursesPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(displayCoursesDisplayButton)
                .addContainerGap())
        );

        studentTabbedPane.addTab("Display Courses", displayCoursesPanel);

        finalSelectCourseCourse.setText("Select Course:");

        finalSelectStudentCourse.setText("Select Student:");

        scheduleCourseCourseComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scheduleCourseCourseComboBoxActionPerformed(evt);
            }
        });

        scheduleCoursesSubmitButton.setText("Submit");
        scheduleCoursesSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scheduleCoursesSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout scheduleCoursesPanelLayout = new javax.swing.GroupLayout(scheduleCoursesPanel);
        scheduleCoursesPanel.setLayout(scheduleCoursesPanelLayout);
        scheduleCoursesPanelLayout.setHorizontalGroup(
            scheduleCoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scheduleCoursesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scheduleCoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scheduleCourseStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(scheduleCoursesPanelLayout.createSequentialGroup()
                        .addComponent(finalSelectCourseCourse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(scheduleCourseCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(scheduleCoursesPanelLayout.createSequentialGroup()
                        .addComponent(finalSelectStudentCourse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(scheduleCoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scheduleCoursesSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scheduleCourseStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(258, Short.MAX_VALUE))
        );
        scheduleCoursesPanelLayout.setVerticalGroup(
            scheduleCoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scheduleCoursesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scheduleCoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finalSelectCourseCourse)
                    .addComponent(scheduleCourseCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(scheduleCoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finalSelectStudentCourse)
                    .addComponent(scheduleCourseStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(scheduleCoursesSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(scheduleCourseStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(110, Short.MAX_VALUE))
        );

        scheduleCourseStatusLabel.getAccessibleContext().setAccessibleName("... has been waitlisted for this class");

        studentTabbedPane.addTab("Schedule Courses", scheduleCoursesPanel);

        finalSelectStudentSchedule.setText("Select Student:");

        displayScheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Code", "Status"
            }
        ));
        jScrollPane2.setViewportView(displayScheduleTable);

        displayScheduleDisplayButton.setText("Submit");
        displayScheduleDisplayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayScheduleDisplayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout displaySchedulePanelLayout = new javax.swing.GroupLayout(displaySchedulePanel);
        displaySchedulePanel.setLayout(displaySchedulePanelLayout);
        displaySchedulePanelLayout.setHorizontalGroup(
            displaySchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displaySchedulePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displaySchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(displaySchedulePanelLayout.createSequentialGroup()
                        .addComponent(finalSelectStudentSchedule)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displayScheduleStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(displayScheduleDisplayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(295, Short.MAX_VALUE))
        );
        displaySchedulePanelLayout.setVerticalGroup(
            displaySchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displaySchedulePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displaySchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finalSelectStudentSchedule)
                    .addComponent(displayScheduleStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayScheduleDisplayButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        studentTabbedPane.addTab("Display Schedule", displaySchedulePanel);

        dropCourseSelectCourseFinal.setText("Select Course:");

        studentDropCourseButton.setText("Drop Course");
        studentDropCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentDropCourseButtonActionPerformed(evt);
            }
        });

        studentDropCourseTextArea.setColumns(20);
        studentDropCourseTextArea.setRows(5);
        jScrollPane4.setViewportView(studentDropCourseTextArea);

        javax.swing.GroupLayout dropCoursePanelLayout = new javax.swing.GroupLayout(dropCoursePanel);
        dropCoursePanel.setLayout(dropCoursePanelLayout);
        dropCoursePanelLayout.setHorizontalGroup(
            dropCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dropCoursePanelLayout.createSequentialGroup()
                        .addComponent(dropCourseSelectCourseFinal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(studentDropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(studentDropCourseButton))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(264, Short.MAX_VALUE))
        );
        dropCoursePanelLayout.setVerticalGroup(
            dropCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dropCourseSelectCourseFinal)
                    .addComponent(studentDropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentDropCourseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        studentTabbedPane.addTab("Drop Course", dropCoursePanel);

        finalCurrentStudent.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        finalCurrentStudent.setText("Current Student:");
        finalCurrentStudent.setToolTipText("");

        currentStudentLabel.setText("None, Add a Student");

        changeStudentButton.setText("Change Student");
        changeStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeStudentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentTabbedPanelLayout = new javax.swing.GroupLayout(studentTabbedPanel);
        studentTabbedPanel.setLayout(studentTabbedPanelLayout);
        studentTabbedPanelLayout.setHorizontalGroup(
            studentTabbedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(studentTabbedPane)
            .addGroup(studentTabbedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(finalCurrentStudent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(currentStudentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(changeStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(changeStudentButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(17, 17, 17))
        );
        studentTabbedPanelLayout.setVerticalGroup(
            studentTabbedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentTabbedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentTabbedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentTabbedPanelLayout.createSequentialGroup()
                        .addComponent(finalCurrentStudent)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(studentTabbedPanelLayout.createSequentialGroup()
                        .addGroup(studentTabbedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(studentTabbedPanelLayout.createSequentialGroup()
                                .addGroup(studentTabbedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(changeStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(changeStudentButton))
                                .addGap(5, 5, 5))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentTabbedPanelLayout.createSequentialGroup()
                                .addComponent(currentStudentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)))
                        .addComponent(studentTabbedPane))))
        );

        jTabbedPane1.addTab("Student", studentTabbedPanel);

        finalCurrentSemester.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        finalCurrentSemester.setText("Current Semester: ");

        currentSemesterLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        currentSemesterLabel.setText("           ");

        changeSemesterButton.setText("Change Semester");
        changeSemesterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSemesterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CourseSchedulerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(finalCurrentSemester)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentSemesterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(changeSemesterComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(30, 30, 30)
                                .addComponent(changeSemesterButton)
                                .addGap(80, 80, 80)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(CourseSchedulerLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finalCurrentSemester)
                    .addComponent(currentSemesterLabel)
                    .addComponent(changeSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeSemesterButton))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addSemesterSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSemesterSubmitButtonActionPerformed
        String semester = addSemesterTextfield.getText();
        SemesterQueries.addSemester(semester);
        addSemesterStatusLabel.setText("Semester " + semester + " has been added.");
        rebuildSemesterComboBoxes();
    }//GEN-LAST:event_addSemesterSubmitButtonActionPerformed

    private void addCourseSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseSubmitButtonActionPerformed
        String courseCode = addCourseCourseCodeTextField.getText();
        String courseDescription = addCourseCourseDescriptionTextField.getText();
        int seats = (int)seatsSpinner.getValue();
        
        CourseEntry course = new CourseEntry(currentSemester,courseCode,courseDescription,seats);
        CourseQueries.addCourse(course);
        addCourseStatusLabel.setText(courseCode + " has been added.");
        rebuildCourseComboBoxes();

    }//GEN-LAST:event_addCourseSubmitButtonActionPerformed

    private void scheduleCourseCourseComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scheduleCourseCourseComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_scheduleCourseCourseComboBoxActionPerformed

    private void displayCoursesDisplayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayCoursesDisplayButtonActionPerformed
        // TODO add your handling code here:
        
        ArrayList<CourseEntry> courses = CourseQueries.getAllCourses(currentSemester);
        DefaultTableModel displayCoursesTableModel = (DefaultTableModel)displayCoursesTable.getModel();
        
        displayCoursesTableModel.setNumRows(0);
        Object[] rowData = new Object[3];
        
        for(CourseEntry course:courses){
            rowData[0] = course.getCourseCode();
            rowData[1] = course.getCourseDescription();
            rowData[2] = course.getSeats();
            displayCoursesTableModel.addRow(rowData);
        }
        
    }//GEN-LAST:event_displayCoursesDisplayButtonActionPerformed

    private void displayScheduleDisplayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayScheduleDisplayButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        String studentID = students.get(displayScheduleStudentComboBox.getSelectedIndex()).getStudentID();
        ArrayList<ScheduleEntry> schedule = ScheduleQueries.getScheduleByStudent(currentSemester, studentID);
        
        DefaultTableModel displayScheduleTableModel = (DefaultTableModel)displayScheduleTable.getModel();
        
        displayScheduleTableModel.setNumRows(0);
        Object[] rowData = new Object[2];
        
        for(ScheduleEntry entry:schedule){
            rowData[0] = entry.getCourseCode();
            if(entry.getCourseStatus().equals("S")){
                rowData[1] = "Scheduled";
            }
            else{
                rowData[1] = "Waitlisted";
            }
            displayScheduleTableModel.addRow(rowData);
        }
    }//GEN-LAST:event_displayScheduleDisplayButtonActionPerformed

    private void changeSemesterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeSemesterButtonActionPerformed
        String semester = changeSemesterComboBox.getSelectedItem().toString();
        currentSemesterLabel.setText(semester);
        currentSemester = semester;
        rebuildCourseComboBoxes();
    }//GEN-LAST:event_changeSemesterButtonActionPerformed

    private void addStudentSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentSubmitButtonActionPerformed
        String studentID = addStudentStudentIDTextField.getText();
        String firstName = addStudentFirstNameTextField.getText();
        String lastName = addStudentLastNameTextField.getText();
        
        StudentEntry student = new StudentEntry(studentID, firstName, lastName);
        StudentQueries.addStudent(student);
        addStudentStatusLabel.setText(lastName + ", " + firstName + " has been added.");
        rebuildStudentComboBoxes();
    }//GEN-LAST:event_addStudentSubmitButtonActionPerformed

    private void scheduleCoursesSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scheduleCoursesSubmitButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        String studentID = students.get(scheduleCourseStudentComboBox.getSelectedIndex()).getStudentID();
        String courseCode = scheduleCourseCourseComboBox.getSelectedItem().toString();
        String status;
        if(ScheduleQueries.getScheduledStudentCount(currentSemester, courseCode) >= CourseQueries.getCourseSeats(currentSemester, courseCode)){
            status = "W";
            scheduleCourseStatusLabel.setText(scheduleCourseStudentComboBox.getSelectedItem().toString() + " has been waitlisted for " + scheduleCourseCourseComboBox.getSelectedItem().toString());
        }
        else{
            status = "S";
            scheduleCourseStatusLabel.setText(scheduleCourseStudentComboBox.getSelectedItem().toString() + " has been scheduled for " + scheduleCourseCourseComboBox.getSelectedItem().toString());
        }
        java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
        ScheduleQueries.addScheduleEntry(new ScheduleEntry(currentSemester, courseCode, studentID, status, currentTimestamp));
    }//GEN-LAST:event_scheduleCoursesSubmitButtonActionPerformed

    private void adminDropCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminDropCourseButtonActionPerformed
        // TODO add your handling code here:
        String courseCode = adminDropCourseComboBox.getSelectedItem().toString();
        adminDropCourseTextArea.setText("Scheduled students dropped from the course:\n");
        ArrayList<ScheduleEntry> scheduled = ScheduleQueries.getScheduledStudentsByCourse(currentSemester, courseCode);
        ArrayList<ScheduleEntry> waitlisted = ScheduleQueries.getWaitlistedStudentsByCourse(currentSemester, courseCode);
        
        if(!scheduled.isEmpty()){
            for(ScheduleEntry schedule:scheduled){
                String lastName = StudentQueries.getStudent(schedule.getStudentID()).getLastName();
                String firstName = StudentQueries.getStudent(schedule.getStudentID()).getFirstName();
                adminDropCourseTextArea.append(lastName + "," + firstName + " " + schedule.getStudentID() + "\n");
            }
        }
        adminDropCourseTextArea.append("\nWaitlisted students dropped from the course:\n");
        if(!waitlisted.isEmpty()){
            for(ScheduleEntry waitlist:waitlisted){
                String lastName = StudentQueries.getStudent(waitlist.getStudentID()).getLastName();
                String firstName = StudentQueries.getStudent(waitlist.getStudentID()).getFirstName();
                adminDropCourseTextArea.append(lastName + "," + firstName + " " + waitlist.getStudentID() + "\n");
            }
        }
        ScheduleQueries.dropScheduleByCourse(currentSemester, courseCode);
        CourseQueries.dropCourse(currentSemester, courseCode);
        rebuildCourseComboBoxes();
    }//GEN-LAST:event_adminDropCourseButtonActionPerformed

    private void dropStudentDisplayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropStudentDisplayButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        String studentID = students.get(dropStudentComboBox.getSelectedIndex()).getStudentID();
        String lastName = students.get(dropStudentComboBox.getSelectedIndex()).getLastName();
        String firstName = students.get(dropStudentComboBox.getSelectedIndex()).getFirstName();
        
        StudentQueries.dropStudent(studentID);
        dropStudentTextArea.setText(lastName + "," + firstName + " " + studentID + " has been dropped from the list of students.\n");
        
        ArrayList<String> semesterList = SemesterQueries.getSemesterList();
        for(String semester:semesterList){
            ArrayList <ScheduleEntry> schedules = ScheduleQueries.getScheduleByStudent(semester, studentID);
            dropStudentTextArea.append("\nFor Semester: " + semester + "\n");
            
            for(ScheduleEntry schedule:schedules){
                ScheduleQueries.dropStudentScheduleByCourse(semester, studentID, schedule.getCourseCode());
                ArrayList <ScheduleEntry> waitlisted = ScheduleQueries.getWaitlistedStudentsByCourse(semester, schedule.getCourseCode());
                if(waitlisted.isEmpty()){
                    dropStudentTextArea.append(lastName + "," + firstName + " " + studentID + " has been dropped from " + schedule.getCourseCode() + "\n");
                }
                if(!waitlisted.isEmpty()){
                    ScheduleQueries.updateScheduleEntry(semester, waitlisted.get(0));
                    if(waitlisted.get(0).getStudentID().equals(studentID)){
                        dropStudentTextArea.append(lastName + "," + firstName + " " + studentID + " has been dropped from the waitlist for " + schedule.getCourseCode() + "\n");
                        ScheduleQueries.updateScheduleEntry(semester, waitlisted.get(0));
                    }
                    else{
                        dropStudentTextArea.append(lastName + "," + firstName + " " + studentID + " has been dropped from " + schedule.getCourseCode() + "\n");
                    }
                }
                if(!waitlisted.isEmpty()){
                    if(!waitlisted.get(0).getStudentID().equals(studentID)){
                        Timestamp timestamp = new Timestamp(Calendar.getInstance().getTime().getTime());
                        ScheduleQueries.updateScheduleEntry(semester, new ScheduleEntry(semester, schedule.getCourseCode(), waitlisted.get(0).getStudentID(), "S", timestamp));
                        StudentEntry updateStudent = StudentQueries.getStudent(waitlisted.get(0).getStudentID());
                        dropStudentTextArea.append(updateStudent.getLastName() + "," + updateStudent.getFirstName() + " " + updateStudent.getStudentID() + " has been scheduled into " + schedule.getCourseCode() + "\n");
                    }
                }
            }
        }
        dropStudentTextArea.append("\n" + lastName + "," + firstName + " has been removed from all the student comboboxes.");
        ScheduleQueries.dropScheduleByStudent(studentID);
        StudentQueries.dropStudent(studentID);
        rebuildStudentComboBoxes();
    }//GEN-LAST:event_dropStudentDisplayButtonActionPerformed

    private void diplayCourseListStudentsDisplayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diplayCourseListStudentsDisplayButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<ScheduleEntry> scheduled = ScheduleQueries.getScheduledStudentsByCourse(currentSemester, displayCourseListOfStudentsComboBox.getSelectedItem().toString());
        ArrayList<ScheduleEntry> waitlisted = ScheduleQueries.getWaitlistedStudentsByCourse(currentSemester, displayCourseListOfStudentsComboBox.getSelectedItem().toString());
        ArrayList<StudentEntry> scheduledStudent = new ArrayList<>();
        ArrayList<StudentEntry> waitlistedStudent = new ArrayList<>();
        
        for(ScheduleEntry schedule:scheduled){
            scheduledStudent.add(StudentQueries.getStudent(schedule.getStudentID()));
        }
        
        for(ScheduleEntry waitlist:waitlisted){
            waitlistedStudent.add(StudentQueries.getStudent(waitlist.getStudentID()));
        }
        
        DefaultTableModel displayCourseListStudentsScheduledStudentsModel = (DefaultTableModel)displayCourseListStudentsScheduledStudents.getModel();
        DefaultTableModel displayCourseListStudentsWaitlistedStudentsModel = (DefaultTableModel)displayCourseListStudentsWaitlistedStudents.getModel();
        
        displayCourseListStudentsScheduledStudentsModel.setNumRows(0);
        displayCourseListStudentsWaitlistedStudentsModel.setNumRows(0);
        Object[] rowData = new Object[3];
        
        for(StudentEntry schedule:scheduledStudent){
            rowData[0] = schedule.getLastName();
            rowData[1] = schedule.getFirstName();
            rowData[2] = schedule.getStudentID();
            displayCourseListStudentsScheduledStudentsModel.addRow(rowData);
        }
        
        for(StudentEntry waitlist:waitlistedStudent){
            rowData[0] = waitlist.getLastName();
            rowData[1] = waitlist.getFirstName();
            rowData[2] = waitlist.getStudentID();
            displayCourseListStudentsWaitlistedStudentsModel.addRow(rowData);
        }
    }//GEN-LAST:event_diplayCourseListStudentsDisplayButtonActionPerformed

    private void studentDropCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentDropCourseButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        String studentID = students.get(changeStudentComboBox.getSelectedIndex()).getStudentID();
        String lastName = students.get(changeStudentComboBox.getSelectedIndex()).getLastName();
        String firstName = students.get(changeStudentComboBox.getSelectedIndex()).getFirstName();
        String courseCode = studentDropCourseComboBox.getSelectedItem().toString();
        ArrayList <ScheduleEntry> waitlisted = ScheduleQueries.getWaitlistedStudentsByCourse(currentSemester, courseCode);
        
        studentDropCourseTextArea.setText(lastName + "," + firstName + " " + studentID + " has been dropped from " + courseCode + "\n");
        
        if(!waitlisted.isEmpty()){
            if(!waitlisted.get(0).getStudentID().equals(studentID)){
                Timestamp timestamp = new Timestamp(Calendar.getInstance().getTime().getTime());
                ScheduleQueries.updateScheduleEntry(currentSemester, new ScheduleEntry(currentSemester, courseCode, waitlisted.get(0).getStudentID(), "S", timestamp));
                StudentEntry updateStudent = StudentQueries.getStudent(waitlisted.get(0).getStudentID());
                studentDropCourseTextArea.append(updateStudent.getLastName() + "," + updateStudent.getFirstName() + " has been scheduled into " + courseCode);
            }
        }
        
        ScheduleQueries.dropStudentScheduleByCourse(currentSemester, studentID, courseCode);
    }//GEN-LAST:event_studentDropCourseButtonActionPerformed

    private void changeStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeStudentButtonActionPerformed
        // TODO add your handling code here:
        String studentName = (String) changeStudentComboBox.getSelectedItem();
        String firstName = (studentName.split(", "))[0];
        String lastName = (studentName.split(", "))[1];
        String studentID = getStudentID(studentName);
        currentStudent = new StudentEntry(studentID, firstName, lastName);
        
        currentStudentLabel.setText(studentName);
        rebuildDropCourseComboBoxes();
    }//GEN-LAST:event_changeStudentButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CourseSchedulerLabel;
    private javax.swing.JTextField addCourseCourseCodeTextField;
    private javax.swing.JTextField addCourseCourseDescriptionTextField;
    private javax.swing.JPanel addCoursePanel;
    private javax.swing.JLabel addCourseStatusLabel;
    private javax.swing.JButton addCourseSubmitButton;
    private javax.swing.JPanel addSemesterPanel;
    private javax.swing.JLabel addSemesterStatusLabel;
    private javax.swing.JButton addSemesterSubmitButton;
    private javax.swing.JTextField addSemesterTextfield;
    private javax.swing.JTextField addStudentFirstNameTextField;
    private javax.swing.JTextField addStudentLastNameTextField;
    private javax.swing.JPanel addStudentPanel;
    private javax.swing.JLabel addStudentStatusLabel;
    private javax.swing.JTextField addStudentStudentIDTextField;
    private javax.swing.JButton addStudentSubmitButton;
    private javax.swing.JButton adminDropCourseButton;
    private javax.swing.JComboBox<String> adminDropCourseComboBox;
    private javax.swing.JPanel adminDropCoursePanel;
    private javax.swing.JTextArea adminDropCourseTextArea;
    private javax.swing.JTabbedPane adminTabbedPane;
    private javax.swing.JPanel adminTabbedPanel;
    private javax.swing.JButton changeSemesterButton;
    private javax.swing.JComboBox<String> changeSemesterComboBox;
    private javax.swing.JButton changeStudentButton;
    private javax.swing.JComboBox<String> changeStudentComboBox;
    private javax.swing.JLabel currentSemesterLabel;
    private javax.swing.JLabel currentStudentLabel;
    private javax.swing.JButton diplayCourseListStudentsDisplayButton;
    private javax.swing.JComboBox<String> displayCourseListOfStudentsComboBox;
    private javax.swing.JPanel displayCourseListOfStudentsPanel;
    private javax.swing.JTable displayCourseListStudentsScheduledStudents;
    private javax.swing.JLabel displayCourseListStudentsSelectCourseFinal;
    private javax.swing.JTable displayCourseListStudentsWaitlistedStudents;
    private javax.swing.JButton displayCoursesDisplayButton;
    private javax.swing.JPanel displayCoursesPanel;
    private javax.swing.JTable displayCoursesTable;
    private javax.swing.JButton displayScheduleDisplayButton;
    private javax.swing.JPanel displaySchedulePanel;
    private javax.swing.JComboBox<String> displayScheduleStudentComboBox;
    private javax.swing.JTable displayScheduleTable;
    private javax.swing.JPanel dropCoursePanel;
    private javax.swing.JLabel dropCourseSelectCourseFinal;
    private javax.swing.JComboBox<String> dropStudentComboBox;
    private javax.swing.JButton dropStudentDisplayButton;
    private javax.swing.JPanel dropStudentPanel;
    private javax.swing.JLabel dropStudentSelectStudentFinal;
    private javax.swing.JTextArea dropStudentTextArea;
    private javax.swing.JLabel finalAddSemesterName;
    private javax.swing.JLabel finalAddStudentFirst;
    private javax.swing.JLabel finalAddStudentID;
    private javax.swing.JLabel finalAddStudentLast;
    private javax.swing.JLabel finalCourseCode;
    private javax.swing.JLabel finalCourseDescription;
    private javax.swing.JLabel finalCurrentSemester;
    private javax.swing.JLabel finalCurrentStudent;
    private javax.swing.JLabel finalSeats;
    private javax.swing.JLabel finalSelectCourseCourse;
    private javax.swing.JLabel finalSelectStudentCourse;
    private javax.swing.JLabel finalSelectStudentSchedule;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> scheduleCourseCourseComboBox;
    private javax.swing.JLabel scheduleCourseStatusLabel;
    private javax.swing.JComboBox<String> scheduleCourseStudentComboBox;
    private javax.swing.JPanel scheduleCoursesPanel;
    private javax.swing.JButton scheduleCoursesSubmitButton;
    private javax.swing.JLabel scheduledStudentsFinal;
    private javax.swing.JSpinner seatsSpinner;
    private javax.swing.JLabel selectCourseToBeDroppedFinal;
    private javax.swing.JButton studentDropCourseButton;
    private javax.swing.JComboBox<String> studentDropCourseComboBox;
    private javax.swing.JTextArea studentDropCourseTextArea;
    private javax.swing.JTabbedPane studentTabbedPane;
    private javax.swing.JPanel studentTabbedPanel;
    private javax.swing.JLabel waitlistedStudentsFinal;
    // End of variables declaration//GEN-END:variables
}
